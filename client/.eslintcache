[{"C:\\git\\React-Management-Tutorial\\client\\src\\index.js":"1","C:\\git\\React-Management-Tutorial\\client\\src\\App.js":"2","C:\\git\\React-Management-Tutorial\\client\\src\\reportWebVitals.js":"3","C:\\git\\React-Management-Tutorial\\client\\src\\components\\Customer.js":"4","C:\\git\\React-Management-Tutorial\\client\\src\\components\\CustomerAdd.js":"5","C:\\git\\React-Management-Tutorial\\client\\src\\components\\CustomerDelete.js":"6","C:\\git\\ShoppingMall\\client\\src\\index.js":"7","C:\\git\\ShoppingMall\\client\\src\\App.js":"8","C:\\git\\ShoppingMall\\client\\src\\reportWebVitals.js":"9","C:\\git\\ShoppingMall\\client\\src\\components\\ProductView.js":"10","C:\\git\\ShoppingMall\\client\\src\\components\\Product.js":"11"},{"size":743,"mtime":1610696203072,"results":"12","hashOfConfig":"13"},{"size":7696,"mtime":1610701171954,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1610254228388,"results":"15","hashOfConfig":"13"},{"size":847,"mtime":1610545537078,"results":"16","hashOfConfig":"13"},{"size":5916,"mtime":1610696170418,"results":"17","hashOfConfig":"13"},{"size":2330,"mtime":1610696639462,"results":"18","hashOfConfig":"13"},{"size":743,"mtime":1611116185430,"results":"19","hashOfConfig":"20"},{"size":5890,"mtime":1611391962454,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1611116185431,"results":"22","hashOfConfig":"20"},{"size":754,"mtime":1611209351699,"results":"23","hashOfConfig":"20"},{"size":1102,"mtime":1611391472473,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mybz7o",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1s253bb",{"filePath":"42","messages":"43","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\git\\React-Management-Tutorial\\client\\src\\index.js",[],"C:\\git\\React-Management-Tutorial\\client\\src\\App.js",["51"],"C:\\git\\React-Management-Tutorial\\client\\src\\reportWebVitals.js",[],["52","53"],"C:\\git\\React-Management-Tutorial\\client\\src\\components\\Customer.js",[],"C:\\git\\React-Management-Tutorial\\client\\src\\components\\CustomerAdd.js",["54"],"import React from 'react';\r\n//포스트 방식으로 고객 추가 데이터 서버로 보낼 수 있도록 axios 에서 포스트 라이브러라 추가\r\nimport {post} from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    hidden :{\r\n        display :'none'\r\n    }\r\n});\r\n\r\n\r\nclass CustomerAdd extends React.Component{\r\n\r\n   \r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state ={            \r\n            file    :null,  //binary 형태의 데이터 \r\n            userName:'',\r\n            birthday:'',\r\n            gender  :'',\r\n            job     :'',           \r\n            fileName: '',\r\n            open    :false  //이미지 파일 이름\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    handleFormSubmit =(e)=>{ //고객 데이터 추가 \r\n        console.log(\"1\");\r\n        e.preventDefault()//데이터가 서버에 전달 될때 오류가 발생하지 않도록 해주는 함수\r\n        this.addCustomer()\r\n            .then((response) =>{//서버로 부터 어떤 응답이 왔을 때 건너온 데이터를 콘솔창에 출력\r\n                console.log(response.data);\r\n              this.props.stateRefresh();//고객추가-> 서버응답->고객목록 다시 불러옴\r\n            })\r\n            console.log(\"2\");\r\n        this.setState({           \r\n             file    :null,  //binary 형태의 데이터 \r\n             userName:'',\r\n             birthday:'',\r\n             gender  :'',\r\n             job     :'',           \r\n             fileName:'',  //이미지 파일 이름\r\n             open    :false\r\n         })\r\n\r\n    }\r\n\r\n    handleValueChange =(e) =>{\r\n        let nextState={};\r\n        nextState[e.target.name]=e.target.value;\r\n        this.setState(nextState);\r\n    } \r\n\r\n    handleFileChange =(e) => {\r\n\r\n    \r\n        this.setState({\r\n            file: e.target.files[0],//e.target=이벤트가 발생한 인풋 값 자체\r\n            fileName :e.target.value\r\n             \r\n        })\r\n    }\r\n\r\n    addCustomer=()=>{\r\n        console.log(\"2\");\r\n        const url ='/api/customers/add';\r\n        const formData=new FormData();\r\n        formData.append('image',    this.state.file);\r\n        formData.append('name',     this.state.userName);\r\n        formData.append('birthday', this.state.birthday);\r\n        formData.append('gender',   this.state.gender);\r\n        formData.append('job',      this.state.job);\r\n        const config ={//헤더정보\r\n            headers:{\r\n                'content-type' : 'multipart/form-data'//전달하고자 하는 데이터에 파일이 포함되어 있을 때 설정\r\n            }\r\n\r\n        } \r\n        console.log(formData);\r\n        return post(url,formData,config);//post 라이브러리를 이용해서 해당 url에 formData를 해당 환경 설정에 맞게 헤더를 붙여서 실제로 서버로 데이터 보냄\r\n    } \r\n\r\n    handleClickOpen =() => {//사용자가 고객추가 버튼 눌러서 고객 추가모달 팝업 창 뜸\r\n        this.setState({\r\n            open :true\r\n        });\r\n    }\r\n\r\n    handleClose = ()=> {\r\n    this.setState({           \r\n         file    :null,  //binary 형태의 데이터 \r\n         userName:'',\r\n         birthday:'',\r\n         gender  :'',\r\n         job     :'',           \r\n         fileName:'',  //이미지 파일 이름\r\n         open :false//현재 팝업 창이 화면에 출력 되지 않도록\r\n     })\r\n}\r\n\r\n\r\n\r\n    render(){\r\n        const { classes } =this.props;\r\n        //고객 추가 양식이 어떤식으로 보여지는지 \r\n         return(\r\n            <div>\r\n                <Button variant =\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                   고객 추가하기\r\n                </Button> \r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>고객 추가</DialogTitle>\r\n                    <DialogContent>\r\n                    <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type =\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} file={this.state.file} /><br/>\r\n                    <label htmlFor=\"raised-button-file\">\r\n                        <Button variant=\"contained\" color =\"primary\" component=\"span\" name =\"file\">\r\n                            {this.state.fileName ===\"\" ? \"프로필 이미지 선택\" : this.state.fileName} \r\n                        </Button>\r\n                    </label> \r\n                    <br/>\r\n                    <TextField label=\"이름\" input type =\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange}/><br/>\r\n                    <TextField label=\"생일\" input type =\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange}/><br/>\r\n                    <TextField label=\"성별\" input type =\"text\" name=\"gender\"   value={this.state.gender}   onChange={this.handleValueChange}/><br/>\r\n                    <TextField label=\"직업\" input type =\"text\" name=\"job\"      value={this.state.job}      onChange={this.handleValueChange}/><br/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n           \r\n         )\r\n\r\n    }\r\n\r\n}\r\nexport default withStyles(styles)(CustomerAdd);\r\n","C:\\git\\React-Management-Tutorial\\client\\src\\components\\CustomerDelete.js",[],"C:\\git\\ShoppingMall\\client\\src\\index.js",[],["55","56"],"C:\\git\\ShoppingMall\\client\\src\\App.js",["57","58","59","60","61","62","63","64","65","66","67","68","69"],"C:\\git\\ShoppingMall\\client\\src\\reportWebVitals.js",[],"C:\\git\\ShoppingMall\\client\\src\\components\\ProductView.js",[],["70","71"],"C:\\git\\ShoppingMall\\client\\src\\components\\Product.js",[],{"ruleId":"72","severity":1,"message":"73","line":18,"column":16,"nodeType":"74","messageId":"75","endLine":18,"endColumn":26},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":127,"column":193,"nodeType":"82","endLine":127,"endColumn":215},{"ruleId":"76","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"72","severity":1,"message":"85","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"72","severity":1,"message":"86","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":17},{"ruleId":"72","severity":1,"message":"87","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":16},{"ruleId":"72","severity":1,"message":"88","line":10,"column":8,"nodeType":"74","messageId":"75","endLine":10,"endColumn":17},{"ruleId":"72","severity":1,"message":"89","line":12,"column":8,"nodeType":"74","messageId":"75","endLine":12,"endColumn":24},{"ruleId":"72","severity":1,"message":"90","line":13,"column":8,"nodeType":"74","messageId":"75","endLine":13,"endColumn":14},{"ruleId":"72","severity":1,"message":"91","line":14,"column":8,"nodeType":"74","messageId":"75","endLine":14,"endColumn":15},{"ruleId":"72","severity":1,"message":"92","line":15,"column":8,"nodeType":"74","messageId":"75","endLine":15,"endColumn":18},{"ruleId":"72","severity":1,"message":"93","line":16,"column":8,"nodeType":"74","messageId":"75","endLine":16,"endColumn":18},{"ruleId":"72","severity":1,"message":"94","line":17,"column":8,"nodeType":"74","messageId":"75","endLine":17,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":18,"column":16,"nodeType":"74","messageId":"75","endLine":18,"endColumn":26},{"ruleId":"72","severity":1,"message":"95","line":19,"column":8,"nodeType":"74","messageId":"75","endLine":19,"endColumn":16},{"ruleId":"72","severity":1,"message":"96","line":20,"column":8,"nodeType":"74","messageId":"75","endLine":20,"endColumn":18},{"ruleId":"76","replacedBy":"97"},{"ruleId":"78","replacedBy":"98"},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["99"],["100"],"'Paper' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'CircularProgress' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'InputBase' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.",["99"],["100"],"no-global-assign","no-unsafe-negation"]